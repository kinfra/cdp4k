plugins {
    id "ru.kontur.library"
    id "org.jetbrains.kotlin.jvm"
}

ext {
    release = "0.8"

    versions = [
        commons: '1.5',
        io: '1.1.1',
        logging: '0.3',

        jackson: '2.12.5',
        coroutines: '1.5.2',
    ]
}

archivesBaseName = "cdp4k"

allprojects {
    apply plugin: "ru.kontur.base"
    apply plugin: "org.jetbrains.kotlin.jvm"

    group = "ru.kontur.cdp4k"

    plugins.withId("java") {
        dependencies {
            implementation platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:${versions.coroutines}")
            implementation platform("com.fasterxml.jackson:jackson-bom:${versions.jackson}")

            constraints {
                allMain "ru.kontur.kinfra:kinfra-io:${versions.io}"
                implementation "ru.kontur.kinfra:kinfra-commons:${versions.commons}"
                implementation "ru.kontur.kinfra:kinfra-logging:${versions.logging}"
            }
        }
    }

    plugins.withId("java-library") {
        version = buildVersion(release) { libraryDefaults() }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += "-Xopt-in=ru.kontur.cdp4k.protocol.CdpExperimental"
        }
    }
}

dependencies {
    api "ru.kontur.kinfra:kinfra-io"
    implementation "ru.kontur.kinfra:kinfra-commons"
    implementation "ru.kontur.kinfra:kinfra-logging"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8"
    implementation "com.fasterxml.jackson.core:jackson-databind"
}
